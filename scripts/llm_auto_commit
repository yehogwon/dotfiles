#!/bin/bash

if [ -z "$LLM_AC_API_KEY" ]; then
    echo "LLM_AC_API_KEY is not set"
    exit 1
fi

# if no python
if ! command -v python &> /dev/null; then
    echo "python could not be found"
    exit 1
fi

# if no `requests` package
if ! python -c "import requests" &> /dev/null; then
    echo "requests package could not be found"
    exit 1
fi

if [ -z "$1" ]; then
    echo "Git root is not provided"
    exit 1
fi

# home expansion
LLM_AC_GIT_ROOT=$(eval echo "$1")

if ! git -C $LLM_AC_GIT_ROOT rev-parse --is-inside-work-tree > /dev/null 2>&1; then
    echo "Git is not initialized in $LLM_AC_GIT_ROOT"
    exit 1
fi

if git -C $LLM_AC_GIT_ROOT diff --quiet && git -C $LLM_AC_GIT_ROOT diff --cached --quiet; then
    echo "No changes to commit"
    exit 0
fi

_diff=$(git -C $LLM_AC_GIT_ROOT diff)
_diff_names=$(git -C $LLM_AC_GIT_ROOT diff --name-only)
_readme_candidates=('README.md' 'README' 'readme.md' 'readme')
_readme=''
for candidate in $_readme_candidates; do
    if [ -f "$LLM_AC_GIT_ROOT/$candidate" ]; then
        _readme=$(cat $LLM_AC_GIT_ROOT/$candidate)
        break
    fi
done

_log=$(git -C $LLM_AC_GIT_ROOT log --pretty=oneline -n 80)

message=()

message+=("Generate a Git commit message based on the provided context.\n")
message+=("**Context:**\n")

if [ -n "$_diff" ]; then
    message+=("**\`git diff\` output:**\n")
    message+=("\`\`\`\n")
    message+=("$_diff")
    message+=("\`\`\`\n")
fi

if [ -n "$_diff_names" ]; then
    message+=("**\`git diff --name-only\` output:**\n")
    message+=("\`\`\`\n")
    message+=("$_diff_names")
    message+=("\`\`\`\n")
fi

if [ -n "$_readme" ]; then
    message+=("**\`README.md\` contents:**\n")
    message+=("\`\`\`\n")
    message+=("$_readme")
    message+=("\`\`\`\n")
fi

if [ -n "$_log" ]; then
    message+=("**\`git log\` output:**\n")
    message+=("\`\`\`\n")
    message+=("$_log")
    message+=("\`\`\`\n")
fi

message+=("**Instructions:**\n")
message+=("- Write a single-sentence Git commit message in English.\n")
message+=("- The message must be concise and clearly describe the main purpose of the changes visible in the diff.\n")
message+=("- Output *only* the commit message text, without any introductory phrases, explanations, code blocks, backticks, or emojis. The output should be ready for direct use with \`git commit -m \"<output>\"\`.\n")

proc_message=$(echo -e "${message[@]}")

double_quoted_message=$(echo \"$proc_message\")

python_file_path=$(dirname $0)/llm_auto_commit_helper.py
response=$(python $python_file_path "$double_quoted_message" "LLM_AC_API_KEY")

echo $response
exit 0
